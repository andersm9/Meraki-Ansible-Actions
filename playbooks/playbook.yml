---
- hosts: localhost
  ignore_errors: yes
  connection: localhost
  gather_facts: False
  vars:
    count: 1
    #auth_key: "{{ MERAKI_API_KEY }}"
    aws_access_key: "{{ AWS_ACCESS_KEY_ID }}"
    aws_secret_key: "{{ AWS_SECRET_ACCESS_KEY }}"
    region: "{{ REGION }}"
    PSK: "{{ PSK }}"
    RTID: "{{ RTID }}"
    SSH_KEY: "{{ SSH_KEY }}"

  vars_files:
    - config.yaml



  tasks:

    - name: include variables for devices
      include_vars:
        file: config.yaml
        #name: devices

    - debug:
        msg: "{{ VPNNAME }}"

    - debug:
        msg: "VPNNAME"

    - name: GET The MX UPLINK Public IP
      uri:
        url: https://api.meraki.com/api/v1/organizations/265528/appliance/uplink/statuses
        method: GET
        headers:
          Content-Type: application/json
          Accept: application/json
          X-Cisco-Meraki-API-Key: "{{ MERAKI_API_KEY }}"
        return_content: true
        follow_redirects: all
        validate_certs: true
      register: meraki_uplink

    #- debug:
        #msg: "{{ meraki_uplink }}"

    - name: GET MX Appliance Subnets
      uri:
        url: https://api.meraki.com/api/v1/devices/Q2NY-UYYZ-XVLK/appliance/dhcp/subnets
        method: GET
        headers:
          Content-Type: application/json
          Accept: application/json
          X-Cisco-Meraki-API-Key: "{{ MERAKI_API_KEY }}"
        return_content: true
        follow_redirects: all
        validate_certs: true
      register: meraki_subnets

# AWS part
    - name: GET AWS Network info
      ec2_vpc_net_info:
        region: "{{ region }}"
        #aws_secret_key: "{{ aws_secret_key }}"
        #aws_access_key: "{{ aws_access_key }}"
      register: vpc_ids

    - debug:
        msg: "{{ vpc_ids }}"

    - name: Create a new vgw attached to a specific VPC
      ec2_vpc_vgw:
        state: present
        region: "{{ region }}"
        #aws_secret_key: "{{ aws_secret_key }}"
        #aws_access_key: "{{ aws_access_key }}"
        vpc_id: "{{ vpc_ids.vpcs.0.vpc_id }}"
        name: Ansible-VGW
        type: ipsec.1
      register: created_vgw

    - debug:
        msg: "{{ created_vgw }}"

    - name: Propagate routes from the newly created VGW
      ec2_vpc_route_table:
        vpc_id: "{{ vpc_ids.vpcs.0.vpc_id }}"
        region: "{{ region }}"
        route_table_id: rtb-fe6f4887
        state: present
        lookup: id
        purge_subnets: false
        routes:
          - dest: 0.0.0.0/0
            gateway_id: igw-67e6c800
        propagating_vgw_ids: "{{ created_vgw.vgw.id }}"
      register: route_table

    - debug:
        msg: "{{ route_table }}"

    - name: Identify the VPC IGW
      ec2_vpc_igw:
        vpc_id: "{{ vpc_ids.vpcs.0.vpc_id }}"
        region: "{{ region }}"
        state: present
      register: igw

    #- debug:
        #msg: "{{ igw.gateway_id }}"

    - name: Create Customer Gateway
      ec2_customer_gateway:
        bgp_asn: 12345
        ip_address: "{{ meraki_uplink.json.1.uplinks.0.publicIp }}"
        name: Ansible_Meraki_MX
        region: "{{ region }}"
      register: cgw

    - debug:
        msg: "{{ cgw }}"

    - name: GET CGW_ID
      set_fact:
        cgw_id: "{{ cgw.gateway.customer_gateway.customer_gateway_id }}"

    - name: create a VPN connection
      ec2_vpc_vpn:
        state: present
        static_only: true
        region: "{{ region }}"
        vpn_gateway_id: "{{ created_vgw.vgw.id }}"
        customer_gateway_id: "{{ cgw.gateway.customer_gateway.customer_gateway_id }}"
        tunnel_options:
          -
            PreSharedKey: "{{ PSK }}"
          -
            PreSharedKey: "{{ PSK }}"
        routes:
          - "{{ meraki_subnets.json.0.subnet }}"
      register: vpn

#set up meraki VPN 
    - name: SET third party VPN
      uri:
        url: https://api.meraki.com/api/v1/organizations/265528/appliance/vpn/thirdPartyVPNPeers
        method: PUT
        headers:
          Content-Type: application/json
          Accept: application/json
          X-Cisco-Meraki-API-Key: "{{ MERAKI_API_KEY }}"
        return_content: true
        follow_redirects: all
        validate_certs: true
        body_format: json
        body: { "peers": [ {  "name": "AWS_Peer",
            "publicIp": "{{ vpn.vgw_telemetry.0.outside_ip_address }}" ,
            "privateSubnets": [
                "{{ vpc_ids.vpcs.0.cidr_block }}",
            ],
            "secret": "{{ PSK }}",
            "networkTags": [ "all" ],
            "ikeVersion": "1",
            "ipsecPoliciesPreset": "aws"}
        ]
        }

    - name: SET VPN Firewall
      uri:
        url: https://api.meraki.com/api/v1/organizations/265528/appliance/vpn/vpnFirewallRules
        method: PUT
        headers:
          Content-Type: application/json
          Accept: application/json
          X-Cisco-Meraki-API-Key: "{{ MERAKI_API_KEY }}"
        return_content: true
        follow_redirects: all
        validate_certs: true
        body_format: json
        body: {"rules": [ {
            "comment": "{{ comment1 }}",
            "policy": "{{ policy1 }}",
            "protocol": "{{ protocol1 }}",
            "destPort": "{{ destPort1 }}",
            "destCidr": "{{ destCidr1 }}",
            "srcPort": "{{ srcPort1 }}",
            "srcCidr": "{{ srcCidr1 }}",
            "syslogEnabled": "{{ syslogEnabled1 }}"
        }, {
            "comment": "{{ comment2 }}",
            "policy": "{{ policy2 }}",
            "protocol": "{{ protocol2 }}",
            "destCidr": "{{ destCidr2 }}",
            "srcCidr": "{{ srcCidr2 }}",
            "syslogEnabled": "{{ syslogEnabled2 }}"
        }
        ]
        }
      register: VPN_Status
